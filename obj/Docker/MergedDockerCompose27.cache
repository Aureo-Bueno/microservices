name: dockercompose8577452975442607609
services:
  bascket.api:
    build:
      context: C:\Users\User\Desktop\Microservices
      dockerfile: Bascket.API/Dockerfile
    container_name: bascket.api
    depends_on:
      bascketdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
      CacheSettings:ConnectionString: bascketdb:6379
    image: bascketapi
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\User\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\User\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  bascketdb:
    container_name: bascketdb
    image: redis:alpine
    networks:
      default: null
    ports:
    - mode: ingress
      target: 6379
      published: "6379"
      protocol: tcp
    restart: always
  catalog.api:
    build:
      context: C:\Users\User\Desktop\Microservices
      dockerfile: Catalog.API/Dockerfile
    container_name: catalog.api
    depends_on:
      catalogdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DatabaseSettings:ConnectionsString: mongodb://catalogdb:27017
    image: catalogapi
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "8000"
      protocol: tcp
  catalogdb:
    container_name: catalogdb
    image: mongo
    networks:
      default: null
    ports:
    - mode: ingress
      target: 27017
      published: "27017"
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: mongo_data
      target: /data/db
      volume: {}
  discount.api:
    build:
      context: C:\Users\User\Desktop\Microservices
      dockerfile: Discount.API/Dockerfile
    container_name: discount.api
    depends_on:
      discountdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DatabaseSettings:ConnectionString: Server=discountdb;Port=5432;Database=DiscountFb;User
        Id=admin;Password=admin
    image: discountapi
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "8002"
      protocol: tcp
  discountdb:
    container_name: discountdb
    environment:
      POSTGRES_DB: DiscountDb
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: admin
    image: postgres
    networks:
      default: null
    ports:
    - mode: ingress
      target: 5432
      published: "5432"
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: postgres_data
      target: /var/lib/postgresql/data
      volume: {}
  pgadmin:
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@aureo.com
      PGADMIN_DEFAULT_PASSWORD: admin
    image: dpage/pgadmin
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "5050"
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: pgadmin_data
      target: /root/.pgadmin
      volume: {}
networks:
  default:
    name: dockercompose8577452975442607609_default
volumes:
  mongo_data:
    name: dockercompose8577452975442607609_mongo_data
  pgadmin_data:
    name: dockercompose8577452975442607609_pgadmin_data
  postgres_data:
    name: dockercompose8577452975442607609_postgres_data